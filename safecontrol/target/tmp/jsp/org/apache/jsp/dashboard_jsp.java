/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/11.0.15
 * Generated at: 2025-09-22 03:40:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class dashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

    // Requiere sesi√≥n
    String user = (String) session.getAttribute("user");
    if (user == null) {
        response.sendRedirect(request.getContextPath() + "/login");
        return;
    }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"es\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<title>SafeControl ‚Äî Dashboard</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/css/style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("  <div class=\"brand\">üü° <span>SafeControl</span></div>\r\n");
      out.write("  <div>Dashboard ¬∑ Bienvenido, <strong>");
      out.print( user );
      out.write("</strong></div>\r\n");
      out.write("  <form action=\"");
      out.print( request.getContextPath() );
      out.write("/logout\" method=\"post\" style=\"margin:0\">\r\n");
      out.write("    <button class=\"logout\">Cerrar sesi√≥n</button>\r\n");
      out.write("  </form>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<div class=\"layout\">\r\n");
      out.write("  <!-- Men√∫ lateral -->\r\n");
      out.write("  <aside>\r\n");
      out.write("    <div class=\"m-title\">M√ìDULOS</div>\r\n");
      out.write("    <nav id=\"menu\" class=\"menu\">\r\n");
      out.write("      <!-- Usa SOLO el nombre del archivo. El script agrega /modules/ -->\r\n");
      out.write("      <a href=\"#\" data-url=\"usuarios.jsp\" class=\"active\">Gesti√≥n de Usuarios</a>\r\n");
      out.write("      <a href=\"#\" data-url=\"clientes.jsp\">Gesti√≥n de Clientes</a>\r\n");
      out.write("      <a href=\"#\" data-url=\"empleados.jsp\">Gesti√≥n de Empleados</a>\r\n");
      out.write("      <a href=\"#\" data-url=\"turnos.jsp\">Gesti√≥n de Turnos</a>\r\n");
      out.write("      <a href=\"#\" data-url=\"asignaciones.jsp\">Gesti√≥n de Asignaciones</a>\r\n");
      out.write("      <a href=\"#\" data-url=\"asistencia.jsp\">Gesti√≥n de Asistencia</a>\r\n");
      out.write("      <a href=\"#\" data-url=\"incidentes.jsp\">Gesti√≥n de Incidentes</a>\r\n");
      out.write("      <a href=\"#\" data-url=\"facturacion.jsp\">Gesti√≥n de Facturaci√≥n</a>\r\n");
      out.write("      <a href=\"#\" data-url=\"bitacora.jsp\">Gesti√≥n de Bit√°cora</a>\r\n");
      out.write("      <a href=\"#\" data-url=\"mantenimiento.jsp\">Gesti√≥n de Mantenimiento</a>\r\n");
      out.write("      <a href=\"#\" data-url=\"auditorias.jsp\">Gesti√≥n de Auditor√≠as</a>\r\n");
      out.write("      <a href=\"#\" data-url=\"permisos.jsp\">Gesti√≥n de Permisos</a>\r\n");
      out.write("    </nav>\r\n");
      out.write("  </aside>\r\n");
      out.write("\r\n");
      out.write("  <!-- Panel principal -->\r\n");
      out.write("  <main>\r\n");
      out.write("    <div class=\"panel\">\r\n");
      out.write("      <h2>Selecciona un m√≥dulo para cargar su formulario.</h2>\r\n");
      out.write("      <div id=\"loader\">Cargando‚Ä¶</div>\r\n");
      out.write("      <iframe id=\"panelFrame\" title=\"Panel\"></iframe>\r\n");
      out.write("    </div>\r\n");
      out.write("  </main>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("(function(){\r\n");
      out.write("  const ctx    = '");
      out.print( request.getContextPath() );
      out.write("';\r\n");
      out.write("  const menu   = document.getElementById('menu');\r\n");
      out.write("  const frame  = document.getElementById('panelFrame');\r\n");
      out.write("  const loader = document.getElementById('loader');\r\n");
      out.write("\r\n");
      out.write("  function loadModule(page){\r\n");
      out.write("    loader.style.display = 'block';\r\n");
      out.write("    // prefijo /modules/ agregado UNA SOLA VEZ, m√°s bust de cach√©\r\n");
      out.write("    frame.src = ctx + '/modules/' + page + '?v=' + Date.now();\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  frame.addEventListener('load', () => loader.style.display = 'none');\r\n");
      out.write("\r\n");
      out.write("  // Manejo de clicks del men√∫ (delegado)\r\n");
      out.write("  menu.addEventListener('click', (e) => {\r\n");
      out.write("    const a = e.target.closest('a[data-url]');\r\n");
      out.write("    if (!a) return;\r\n");
      out.write("    e.preventDefault();\r\n");
      out.write("    menu.querySelectorAll('a').forEach(x => x.classList.remove('active'));\r\n");
      out.write("    a.classList.add('active');\r\n");
      out.write("    loadModule(a.dataset.url); // solo el nombre del .jsp\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  // Autocargar el primer m√≥dulo (Usuarios)\r\n");
      out.write("  const first = menu.querySelector('a[data-url]');\r\n");
      out.write("  if (first) {\r\n");
      out.write("    first.classList.add('active');\r\n");
      out.write("    loadModule(first.dataset.url);\r\n");
      out.write("  }\r\n");
      out.write("})();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
